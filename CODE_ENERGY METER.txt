#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>
#include "EmonLib.h"
#include <LiquidCrystal.h>

//pin number for lcd
LiquidCrystal lcd(13,12,14,27,26,25);

EnergyMonitor emon;

#define vCalibration 83.3
#define currCalibration 0.50

float kWh = 0;
unsigned long lastmillis = millis();

// Network credentials
const char* ssid = "xxxx";
const char* password = "xxxxxxxx";

// Initialize Telegram BOT Token and Chat ID
#define BOTtoken "5xxxxxxx198371xxxxxxxxxxxxxx"
// #define CHAT_ID "xxxxxxxx"
#define CHAT_ID "xxxxxxx"

WiFiClientSecure client;
UniversalTelegramBot bot(BOTtoken, client);

int botRequestDelay = 1000;
unsigned long lastTimeBotRan;

void myTimerEvent()
{
  emon.calcVI(20, 2000);
  kWh = kWh + emon.apparentPower * (millis() - lastmillis) / 3600000000.0;
  yield();
  Serial.print("Vrms: ");
  Serial.print(emon.Vrms, 2);
  Serial.print("V");
 
  Serial.print("\tIrms: ");
  Serial.print(emon.Irms, 4);
  Serial.print("A");
 
  Serial.print("\tPower: ");
  Serial.print(emon.apparentPower, 4);
  Serial.print("W");
 
  Serial.print("\tkWh: ");
  Serial.print(kWh, 5);
  Serial.println("kWh");
  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Vrms:");
  lcd.print(emon.Vrms, 2);
  lcd.print("V");
  lcd.setCursor(0, 1);
  lcd.print("Irms:");
  lcd.print(emon.Irms, 4);
  lcd.print("A");
  delay(2500);
  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Power:");
  lcd.print(emon.apparentPower, 4);
  lcd.print("W");
  lcd.setCursor(0, 1);
  lcd.print("kWh:");
  lcd.print(kWh, 4);
  lcd.print("W");
  delay(2500);
 
  lastmillis = millis();
  String message ="*******Status*******\n";
  message = message+"Vrms:"+String(emon.Vrms, 2)+"V\n";
  message = message+"Irms:"+String(emon.Irms, 4)+"A\n";
  message = message+"Power:"+String(emon.apparentPower, 4)+"W\n";
  message = message+"tkWh:"+String(kWh, 5)+"kWh\n";

  bot.sendMessage(CHAT_ID, message, "");
}

void setup() {
  
  Serial.begin(9600);
  lcd.begin(16,2);
  
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  client.setCACert(TELEGRAM_CERTIFICATE_ROOT); 
  
  emon.voltage(35, vCalibration, 1.7); // Voltage: input pin, calibration, phase_shift
  emon.current(34, currCalibration); // Current: input pin, calibration.
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("IOT Smart Energy");
  lcd.setCursor(0,1);
  lcd.print(" Meter Project  ");

  bot.sendMessage(CHAT_ID, "Bot started up", "");
}

void loop() {

  myTimerEvent();
  
}
